系统功能与流程总结
该数字签名与 CA 系统主要包含以下功能与流程：

签名系统（Sign Frame）

密钥生成、保存、加载：用户可输入一个“用户ID”，自动生成并显示其公私钥，也可选择从文件加载已经存在的密钥。
明文录入：用户可在文本框输入需要签名或加密的明文，也可以从文件导入。
加密与签名：
SM2加密：将明文使用接收方的公钥进行 SM2 加密，并以 Base64 格式显示密文。
SHA256哈希：对密文（而非明文）做哈希，得到哈希值。
SM2签名：对该哈希值进行 SM2 签名，生成签名（r、s 的十六进制拼接）。
保存加密与签名结果：可将签名和密文保存至文件中。
验证系统（Verify Frame）

密钥加载：可加载本方私钥，用于后续解密。
证书或对方公钥上传：
如果对方提供了证书，可点击“上传证书”，系统会自动验证证书并从中提取公钥；
如果对方仅提供了公钥文件，也可以直接点击“上传对方公钥”。
签名与密文上传：用户可从文件加载对方签名（r||s）以及密文（Base64），显示在界面中。
解密：用本方私钥对密文进行 SM2 解密，得到明文以及明文哈希。
验证签名：使用对方公钥，对接收到的密文哈希进行 SM2 验证。
验证结果：若密文未被篡改且签名有效，显示“验证成功”；否则显示错误信息。
CA系统（CA Frame）

CA密钥管理：生成或加载 CA 的公私钥，供后续颁发证书、验证证书使用。
证书颁发：
输入要颁发证书的“用户名”，并上传该用户的公钥；
使用 CA 私钥对用户公钥的哈希进行 SM2 签名，并将签名、用户名、用户公钥、CA 公钥等组成证书；
将生成的证书存储到 JSON 文件(cert_repository.json)中，并在界面显示出来。
证书验证：
从存储库或外部文件加载证书；
使用 CA 公钥对证书中“用户公钥哈希”做 SM2 验证；
验证通过即可确认该证书由本 CA 颁发且未被篡改。
证书撤销：
可将已颁发的证书从存储库（issued_certificates 列表）中删除，并保存到 JSON 文件中，实现撤销。
证书保存、加载：
支持将已颁发的证书列表保存到文件，也支持从文件加载证书。
综上所述，该系统实现了一个完整的“签名—验证—证书管理”流程：

签名系统负责生成用户密钥、对明文做加密、对密文做哈希并签名；
验证系统负责加载签名和密文，对其解密并验签，以确认信息完整性和身份真实性；
CA 系统则提供了发行、验证、撤销数字证书的功能，用于统一管理用户公钥，以防止伪造公钥及中间人攻击。
整个流程体现了国密 SM2 算法在签名、加密以及证书管理上的综合应用，是一个相对完整的数字签名与认证管理的示例。